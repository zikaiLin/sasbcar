#' Predict using a trained model
#'
#' This function takes a trained model and new data as input and returns predictions.
#'
#' @param model The trained model object.
#' @param new_data The new data for prediction.
#' @return A vector of predictions.
#'
#' @examples
#' model <- train_model(training_data)
#' new_data <- read.csv("new_data.csv")
#' predictions <- predict_model(model, new_data)
#'
predict_model <- function(model, new_data) {
    # Perform prediction using the trained model
    delta_post = model$post_mean$delta
    theta_post = model$post_mean$theta

    for (j in 1:ncol(new_data)) {
        non_zero_column <- non_zeros_voxels(new_data)
        if(non_zero_column[j] == 1){
        temp <- as.matrix(new_data[,j])
        B <- BayesGPfit::GP.eigen.funcs.fast(temp, poly_degree = poly_degree, a = a, b = b)
        predict_training_p_model_1 <-  predict_training_p_model_1 + delta_post[j]*
            B%*%theta_post[,,j]
        }
        predict_training_y_model_1 <- rbinom(nrow(training_X),1,pnorm(predict_training_p_model_1))
    }
  
    # Return the predictions
    return(predictions)
}